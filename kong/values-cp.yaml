# Do not use Kong Ingress Controller
ingressController:
 enabled: false
  
image:
 repository: kong/kong-gateway
 tag: "3.8.0.0"
  
# Mount the secret created earlier
secretVolumes:
 - kong-cluster-cert
  
env:
 # This is a control_plane node
 role: control_plane
 # These certificates are used for control plane / data plane communication
 cluster_cert: /etc/secrets/kong-cluster-cert/tls.crt
 cluster_cert_key: /etc/secrets/kong-cluster-cert/tls.key

# #Admin GUI (
# admin_gui_url: http://manager
# admin_gui_api_url: http://admin
# # Change the secret and set cookie_secure to true if using a HTTPS endpoint
# admin_gui_session_conf: '{"secret":"secret","storage":"kong","cookie_secure":false}'
  
 # Database
 # CHANGE THESE VALUES
 database: postgres
 pg_database: kong
 pg_user: kong
 pg_password: acn4u4242
 pg_host: kong-postgresql-ha-pgpool.postgres.svc.cluster.local
 pg_ssl: "on"
  
 # Kong Manager password
 password: acn4u4242
  
# Enterprise functionality
enterprise:
 enabled: false
 license_secret: kong-enterprise-license
 rbac:
   enabled: true
   admin_gui_auth: basic-auth

# The control plane serves the Admin API
admin:
 enabled: true
 http:
   enabled: true
  
# Clustering endpoints are required in hybrid mode
cluster:
 enabled: true
 tls:
   enabled: true
  
clustertelemetry:
 enabled: true
 tls:
   enabled: true
  
# Optional features
manager:
 enabled: true
  
# These roles will be served by different Helm releases
proxy:
 enabled: true

 # This is for testing purposes only
 # DO NOT DO THIS IN PRODUCTION
 # Your cluster needs a way to create PersistentVolumeClaims
 # if this option is enabled
 postgresql:
   enabled: true
   auth:
     password: acn4u4242

